name: Terraform - Capabilities Provisioning

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

  workflow_dispatch:
    inputs:
      destroy:
        description: "Deseja destruir os recursos?"
        required: true
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

env:
  TF_VAR_api_key_weather: ${{ secrets.API_KEY.API_WEATHER }}

jobs:
  terraform:
    name: Terraform Deploy or Destroy - Capabilities
    runs-on: ubuntu-latest

    if: startsWith(github.head_ref || github.ref_name, 'prod/') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Inicializar Terraform
        run: terraform -chdir=infra init -reconfigure

      - name: Obter AWS Account ID
        id: aws_account
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Importar recursos existentes
        run: |
          terraform -chdir=infra import aws_s3_bucket.backend weather-states-663354324751 || true
          terraform -chdir=infra import aws_s3_bucket.raw weather-raw-663354324751 || true
          terraform -chdir=infra import aws_s3_bucket.processed weather-processed-663354324751 || true
          terraform -chdir=infra import aws_s3_bucket.glue_scripts weather-glue-scripts-663354324751 || true
          
          terraform -chdir=infra import aws_iam_role.glue_role factored-glue-role || true
          terraform -chdir=infra import aws_iam_role.step_function_role weather-step-function-role || true
          terraform -chdir=infra import aws_iam_role.eventbridge_invoke_role eventbridge-invoke-step-function-role || true
          
          terraform -chdir=infra import aws_glue_catalog_database.weather_db ${AWS_ACCOUNT_ID}:weather_db || true
          terraform -chdir=infra import aws_glue_crawler.processed weather-processed-crawler || true
          terraform -chdir=infra import aws_glue_job.ingest weather-ingest-job || true
          terraform -chdir=infra import aws_glue_job.transform weather-transform-job || true

          terraform -chdir=infra import aws_sfn_state_machine.weather_pipeline arn:aws:states:us-east-1:${AWS_ACCOUNT_ID}:stateMachine:weather-pipeline || true
          terraform -chdir=infra import aws_cloudwatch_event_rule.weekly_trigger weather-weekly-trigger || true
          terraform -chdir=infra import aws_cloudwatch_event_target.trigger_state_machine weather-weekly-trigger/weather-state-machine || true

      - name: Validar configuração
        run: terraform -chdir=infra validate

      - name: Executar Plano
        run: terraform -chdir=infra plan -out=tfplan.out

      - name: Aplicar ou Destruir Recursos
        run: |
          if [ "${{ github.event.inputs.destroy }}" = "true" ]; then
            echo "⚠️ Destruindo infraestrutura..."
            terraform -chdir=infra destroy -auto-approve
          else
            echo "✅ Aplicando infraestrutura..."
            terraform -chdir=infra apply -auto-approve tfplan.out
          fi